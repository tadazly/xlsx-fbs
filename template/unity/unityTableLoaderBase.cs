// automatically generated by xlsx-fbs, do not modify it. Modify xlsx-fbs/template/unity/*.cs instead.

using System.Collections.Generic;
using Cysharp.Threading.Tasks;
using UnityEngine;
using YooAsset;

namespace {{{ NAMESPACE }}}
{
    public abstract class TableLoaderBase<T>
    {
        protected Dictionary<uint, T> _dict;
        protected T[] _items;
        protected bool _loaded = false;

        protected abstract string AssetPath { get; }

        protected abstract UniTask LoadData(TextAsset textAsset);

        public async UniTask<bool> Load()
        {
            if (_loaded) return true;

            var handle = YooAssets.LoadAssetAsync<TextAsset>(AssetPath);
            await handle.ToUniTask();

            if (handle.Status != EOperationStatus.Succeed)
            {
                Debug.LogError($"[TableLoader] Failed to load: {AssetPath}");
                return false;
            }

            var textAsset = handle.AssetObject as TextAsset;

            await LoadData(textAsset);

            _loaded = true;
            return true;
        }

        public T GetItem(uint id)
        {
            if (!_loaded)
            {
                Debug.LogError($"[{AssetPath}] GetItem called before Load");
                return default;
            }

            _dict.TryGetValue(id, out var item);
            return item;
        }

        public T[] GetItems()
        {
            if (!_loaded)
            {
                Debug.LogError($"[{AssetPath}] GetItems called before Load");
                return null;
            }

            return _items;
        }

        // 卸载并清理数据
        public void Unload()
        {
            _dict?.Clear();
            _dict = null;
            _items = null;
            _loaded = false;
        }
    }
}

// <auto-generated>
//  automatically generated by xlsx-fbs, do not modify it. Modify xlsx-fbs/template/unity/*.cs instead.
// </auto-generated>

using System.Collections.Generic;
using Cysharp.Threading.Tasks;
using Google.FlatBuffers;
using UnityEngine;
using YooAsset;

namespace Xlsx
{
    public static class MergeTableLoader
    {
        private const string AssetPath = "mergeTable";
        private static bool _loaded = false;

        public static async UniTask<bool> LoadAll()
        {
            if (_loaded) return true;

            var handle = YooAssets.LoadAssetAsync<TextAsset>(AssetPath);
            await handle.ToUniTask();

            if (handle.Status != EOperationStatus.Succeed)
            {
                Debug.LogError($"[MergeTableLoader] Failed to load: {AssetPath}");
                return false;
            }

            var buffer = new ByteBuffer(((TextAsset)handle.AssetObject).bytes);
            var root = MergeTable.GetRootAsMergeTable(buffer);

            // 注入子表
            ItemTable.Instance.LoadDataFromTableRoot(root.Item);
            ModuleTable.Instance.LoadDataFromTableRoot(root.Module);
            // 其他合并表...

            _loaded = true;
            return true;
        }

        public static void UnloadAll()
        {
            _loaded = false;
            ItemTable.Instance.Unload();
            ModuleTable.Instance.Unload();
            // 更多的表...
        }
    }
}

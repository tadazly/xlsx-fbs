{
    "description": "Excel to FlatBuffers tool.\nOnly list some flatc options, the complete option list please refer to https://flatbuffers.dev/flatc/",
    "versionOption": "Output the version number",
    "helpOption": "Display help for command",
    "commonFlatcOptions": "List some commonly used flatc options", 
    "xlsxFbsOptions": "xlsx-fbs options",
    "input": "Excel file path or directory path",
    "output": "Output file path, default to current directory",
    "namespace": "Namespace for generated code, default to 'xlsx'",
    "censoredFields": "Censored fields, use `,` to connect, will generate a censored version of the file to the `output_censored/` directory",
    "censoredTable": "Censored table, should not output to `output_censored/` directory",
    "censoredOutput": "Censored table output path, default to `${output}_censored/`",
    "defaultKey": "If the table does not set the key property, use this field as the key, not set then not use key attribute",
    "propertyOrder": "Custom property sheet order, default ABCDE",
    "multiThread": "Multi-thread number when batching, default to 4",
    "minimalInfo": "Minimal output, no log information",
    "allowWildTable": "Allow wild-table (tables not configured in $tables.xlsx) when batching, default to false",
    "emptyString": "The string type field in the table will be filled with an empty string instead of null when creating a binary",
    "enableStreamingRead": "Enable streaming read of .xlsx format, fast, small memory, but Not OK for Chinese",
    "binaryExtension": "The extension of output binary file, default to .bin",
    "deleteFbs": "Delete the generated .fbs file after conversion",
    "generateFbsHash": "Generate the TableHashConfig class file for runtime verification (only supports C# and TypeScript, other languages please extend by yourself)",
    "generateJson": "Generate JSON file from the output FlatBuffer",
    "legacyMode": "Legacy mode, only output the original JSON file",
    "successGenerateFbs": "Successfully generate .fbs file",
    "successGenerateBinary": "Successfully generate .bin file",
    "successGenerateJson": "Successfully generate .json file",
    "successGenerateCode": "Successfully generate script",
    "successReadTablesConfig": "Successfully read tables config",
    "warningSignedNumberType": "Warning: There are signed numbers in the table, please check the table data",
    "warningFloatNumberType": "Warning: There are floating-point numbers in the table, please check the table data",
    "warningNumberTypeRange": "Warning: The range of number types is too large, please check the table data",
    "warningWildTable": "Warning: Wild table (tables not configured in $tables.xlsx)",
    "warningDuplicateTable": "Warning: Duplicate table name in the path, which table do you want to convert?",
    "warningNumberTypeOverflow": "Warning: The number type overflows the given type, please check the table data",
    "errorInvalidInput": "Error: Input parameter error, please check the input parameter",
    "errorInvalidPropertyOrder": "Error: --property-order parameter must be a 5-character string representing table columns, like ABCDE",
    "errorInvalidRootDir": "Error: Tables root directory not found",
    "errorTablesConfigNotFound": "Warning: Tables config file $tables.xlsx not found, default to convert all tables",
    "errorTablesRootNotFound": "Error: Tables root directory not found",
    "errorTableNotFound": "Error: Table not found !",
    "errorTableInvalid": "Error: Invalid table format, please check if the table format is correct, the table must contain data sheet and property sheet",
    "errorTableNotSupport": "Error: Table format not supported, please check if the input is correct",
    "errorGenerateFbs": "Error: Failed to generate .fbs file, please check if the table property sheet (order) is correct",
    "errorInvalidDefaultValue": "Error: Invalid default value, please check if the default value is correct",
    "errorFbsNotFound": "Error: The .fbs file to be converted does not exist",
    "errorGenerateCode": "Error: Failed to generate script from fbs",
    "errorUnsupportedPlatform": "Error: Unsupported platform",
    "errorScriptNotFound": "Error: Script file not found",
    "errorInvalidNumberValue": "Error: Invalid number value, please check the table data"
}